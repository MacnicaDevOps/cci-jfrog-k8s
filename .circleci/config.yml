version: 2.1

executors:
  vms:
    machine
  dep:
    docker:
      - image: minepicco/cci-build-image:latest

workflows:

  build-deploy:
    jobs:
      - build_scan
      - deploy:
          requires:
            - build_scan

jobs:
  build_scan:
    exector: vms
      
    environment:
      dev_repo: "docker-local"
      prod_repo: "docker-prod"
      imagename: "artifactory.nohara/docker-local"
      
    steps:
      - checkout
      
      - run:
          name: Prepare Environment -- Install JFrog CLI
          command: |
            sudo apt-get update && sudo apt-get install -y python wget curl jq
            curl -fL https://getcli.jfrog.io | sh

      - run:
          name: Prepare Environment -- Add insecure-registries and hostname
          command: |
            echo '{ "insecure-registries" : ["artifactory.nohara"] }' > daemon.json
            sudo mv daemon.json /etc/docker/
            sudo cat /etc/hosts > hosts && echo $addr" artifactory.nohara" >> hosts
            sudo mv hosts /etc/
            sudo service docker restart
            
      - run:
          name: Prepare Environment -- Install kubectl
          command: |
            curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl
                     
      - run:
          name: Build Image
          command: |
            echo $CIRCLE_PROJECT_REPONAME
            docker build --tag $imagename"/"$CIRCLE_PROJECT_REPONAME":"$CIRCLE_BUILD_NUM .

      - run:
          name: JFrogCLI config
          command: |
            ./jfrog rt config --user=$juser --password=$jpass --url="http://artifactory.nohara/artifactory" $jid
      - run:
          name: JFrogCLI image push and scan
          command: |
            ./jfrog rt docker-push $imagename"/"$CIRCLE_PROJECT_REPONAME":"$CIRCLE_BUILD_NUM $dev_repo --build-name=$CIRCLE_PROJECT_REPONAME --build-number=$CIRCLE_BUILD_NUM
            ./jfrog rt bce $CIRCLE_PROJECT_REPONAME $CIRCLE_BUILD_NUM
            ./jfrog rt bag $CIRCLE_PROJECT_REPONAME $CIRCLE_BUILD_NUM
            ./jfrog rt bp $CIRCLE_PROJECT_REPONAME $CIRCLE_BUILD_NUM
            ./jfrog rt bs $CIRCLE_PROJECT_REPONAME $CIRCLE_BUILD_NUM
      - run:
          name: JFrogCLI promote image to production
          command: |
            ./jfrog rt bpr $CIRCLE_PROJECT_REPONAME $CIRCLE_BUILD_NUM $prod_repo

  deploy:
    docker:
      - image: minepicco/cci-build-image:latest
      
    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: Prepare Environment -- Install gcloud CLI
          command: |
            echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
            sudo apt-get install -y apt-transport-https ca-certificates gnupg
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
            sudo apt-get update && sudo apt-get install -y google-cloud-sdk
            
      - run:
          name: Configure gcloud cli
          command: |
            echo $key>key.json
            gcloud auth activate-service-account --key-file=key.json
            sudo gcloud beta container clusters get-credentials $cluster --region $region --project $project

#            gcloud config set project $project
#            gcloud config set project my_project $project
#            gcloud config set compute/region $region

      - run:
          name: test
          command: |
            sudo kubectl run --restart=Never $CIRCLE_BUILD_NUM --image= 
            sudo kubectl get pods -n nohara -o wide

#            gcloud config configurations activate $account
#      - run:
#          name: auth and push
#          command: |
#            docker login http://artifactory.nohara -u $juser -p $jpass
#            docker push "artifactory.nohara/"$repo"/"$CIRCLE_PROJECT_REPONAME":"$CIRCLE_BUILD_NUM
            
#      - run:
#          name: JFrogCLI artifact publish
#          command: |
#            ./jfrog rt docker-push "artifactory.nohara/"$repo"/"$CIRCLE_PROJECT_REPONAME":"$CIRCLE_BUILD_NUM $repo --build-name=$CIRCLE_PROJECT_REPONAME --build-number=$CIRCLE_BUILD_NUM
#            ./jfrog rt bce $CIRCLE_PROJECT_REPONAME $CIRCLE_BUILD_NUM
#            ./jfrog rt bag $CIRCLE_PROJECT_REPONAME $CIRCLE_BUILD_NUM
#            ./jfrog rt bp $CIRCLE_PROJECT_REPONAME $CIRCLE_BUILD_NUM
#            ./jfrog rt bs $CIRCLE_PROJECT_REPONAME $CIRCLE_BUILD_NUM
#            ./jfrog rt bpr $CIRCLE_PROJECT_REPONAME $CIRCLE_BUILD_NUM $repo
           
